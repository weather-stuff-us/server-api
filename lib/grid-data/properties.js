'use strict'

module.exports = {
  getProperties,
  getProperty
}

const units = require('./units')

const Properties = new Map()

function getProperties () {
  const result = []

  const keys = Array.from(Properties.keys()).sort()
  for (let key of keys) {
    const value = Properties.get(key)
    const { code, suffix, name } = value.unit

    let unit = { code, suffix, name }

    if (unit.name === 'null') {
      result.push({ name: key })
    } else {
      result.push({ name: key, unit })
    }
  }

  return result
}

function getProperty (name) {
  return Properties.get(name)
}

class Property {
  constructor (name, unitCode = null) {
    this._name = name
    this._unit = units.getUnit(unitCode)

    if (this._unit == null) {
      throw new Error(`no unit for code "${unitCode}"`)
    }
  }

  get name () { return this._name }
  get unit () { return this._unit }
}

// generated by tools/build-properties
addProperty('apparentTemperature', 'degF')
addProperty('atmosphericDispersionIndex')
addProperty('ceilingHeight', 'mi')
addProperty('davisStabilityIndex')
addProperty('dewpoint', 'degF')
addProperty('dispersionIndex')
addProperty('grasslandFireDangerIndex')
addProperty('hainesIndex')
addProperty('hazards')
addProperty('heatIndex', 'degF')
addProperty('iceAccumulation', 'in')
addProperty('lightningActivityLevel')
addProperty('lowVisibilityOccurrenceRiskIndex')
addProperty('maxTemperature', 'degF')
addProperty('minTemperature', 'degF')
addProperty('mixingHeight', 'mi')
addProperty('potentialOf15mphWinds')
addProperty('potentialOf20mphWindGusts')
addProperty('potentialOf25mphWinds')
addProperty('potentialOf30mphWindGusts')
addProperty('potentialOf35mphWinds')
addProperty('potentialOf40mphWindGusts')
addProperty('potentialOf45mphWinds')
addProperty('potentialOf50mphWindGusts')
addProperty('potentialOf60mphWindGusts')
addProperty('pressure')
addProperty('primarySwellDirection')
addProperty('primarySwellHeight')
addProperty('probabilityOfHurricaneWinds', 'percent')
addProperty('probabilityOfPrecipitation', 'percent')
addProperty('probabilityOfThunder')
addProperty('probabilityOfTropicalStormWinds', 'percent')
addProperty('quantitativePrecipitation', 'in')
addProperty('redFlagThreatIndex')
addProperty('relativeHumidity', 'percent')
addProperty('secondarySwellDirection')
addProperty('secondarySwellHeight')
addProperty('skyCover', 'percent')
addProperty('snowLevel', 'mi')
addProperty('snowfallAmount', 'in')
addProperty('stability')
addProperty('temperature', 'degF')
addProperty('transportWindDirection', 'compass')
addProperty('transportWindSpeed', 'mi_h')
addProperty('twentyFootWindDirection', 'compass')
addProperty('twentyFootWindSpeed', 'mi_h')
addProperty('visibility', 'mi')
addProperty('waveDirection')
addProperty('waveHeight')
addProperty('wavePeriod')
addProperty('wavePeriod2')
addProperty('weather')
addProperty('windChill', 'degF')
addProperty('windDirection', 'compass')
addProperty('windGust', 'mi_h')
addProperty('windSpeed', 'mi_h')
addProperty('windWaveHeight')

function addProperty (name, unitCode) {
  const property = new Property(name, unitCode)
  Properties.set(name, property)
}

// cli tester
if (require.main === module) main()

function main () {
  console.log('properties')
  console.log(JSON.stringify(getProperties(), null, 4))
}
